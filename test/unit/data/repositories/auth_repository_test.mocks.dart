// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_ar_app/test/unit/data/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_ar_app/core/network/network_info.dart' as _i3;
import 'package:flutter_ar_app/data/datasources/local/secure_storage_service.dart'
    as _i4;
import 'package:flutter_ar_app/data/datasources/remote/auth_api_client.dart'
    as _i2;
import 'package:flutter_ar_app/data/models/auth_token_model.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

class MockAuthApiClient extends _i1.Mock implements _i2.AuthApiClient {
  MockAuthApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.AuthTokenModel> login({
    required String? username,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #username: username,
            #password: password,
          },
        ),
        returnValue: _i5.Future<_i6.AuthTokenModel>.value(_FakeAuthTokenModel_0(
          this,
          Invocation.method(
            #login,
            [],
            {
              #username: username,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i6.AuthTokenModel>);

  @override
  _i5.Future<_i6.AuthTokenModel> refreshToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [refreshToken],
        ),
        returnValue: _i5.Future<_i6.AuthTokenModel>.value(_FakeAuthTokenModel_0(
          this,
          Invocation.method(
            #refreshToken,
            [refreshToken],
          ),
        )),
      ) as _i5.Future<_i6.AuthTokenModel>);

  @override
  _i5.Future<void> logout(String? accessToken) => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [accessToken],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

class MockSecureStorageService extends _i1.Mock
    implements _i4.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> saveAccessToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveAccessToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> saveRefreshToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveRefreshToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> saveTokenExpiry(DateTime? expiry) => (super.noSuchMethod(
        Invocation.method(
          #saveTokenExpiry,
          [expiry],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<DateTime?> getTokenExpiry() => (super.noSuchMethod(
        Invocation.method(
          #getTokenExpiry,
          [],
        ),
        returnValue: _i5.Future<DateTime?>.value(),
      ) as _i5.Future<DateTime?>);

  @override
  _i5.Future<void> saveTokenType(String? tokenType) => (super.noSuchMethod(
        Invocation.method(
          #saveTokenType,
          [tokenType],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getTokenType() => (super.noSuchMethod(
        Invocation.method(
          #getTokenType,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> clearTokens() => (super.noSuchMethod(
        Invocation.method(
          #clearTokens,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> hasValidToken() => (super.noSuchMethod(
        Invocation.method(
          #hasValidToken,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Stream<bool> get onConnectivityChanged => (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i5.Stream<bool>.empty(),
      ) as _i5.Stream<bool>);
}

class _FakeAuthTokenModel_0 extends _i1.SmartFake
    implements _i6.AuthTokenModel {
  _FakeAuthTokenModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}
