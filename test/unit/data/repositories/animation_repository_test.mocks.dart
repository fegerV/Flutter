// Mocks generated by Mockito
// Do not manually edit this file.

import 'dart:async' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:flutter_ar_app/data/datasources/remote/animation_api_client.dart' as _i3;
import 'package:flutter_ar_app/data/datasources/remote/minio_client.dart' as _i4;
import 'package:flutter_ar_app/data/datasources/local/secure_storage_service.dart' as _i5;
import 'package:flutter_ar_app/core/network/network_info.dart' as _i6;
import 'package:flutter_ar_app/data/models/animation_metadata_model.dart' as _i7;

class MockAnimationApiClient extends _i1.Mock implements _i3.AnimationApiClient {
  MockAnimationApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<_i7.AnimationMetadataModel>> getAnimations({
    String? accessToken,
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getAnimations, [], {
          #accessToken: accessToken,
          #page: page,
          #limit: limit,
        }),
        returnValue: _i2.Future<List<_i7.AnimationMetadataModel>>.value([]),
      ) as _i2.Future<List<_i7.AnimationMetadataModel>>);

  @override
  _i2.Future<_i7.AnimationMetadataModel> getAnimationById({
    required String? id,
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getAnimationById, [], {
          #id: id,
          #accessToken: accessToken,
        }),
        returnValue: _i2.Future<_i7.AnimationMetadataModel>.value(
          _FakeAnimationMetadataModel_0(this, Invocation.method(#getAnimationById, [], {#id: id, #accessToken: accessToken})),
        ),
      ) as _i2.Future<_i7.AnimationMetadataModel>);

  @override
  _i2.Future<List<_i7.AnimationMetadataModel>> searchAnimations({
    required String? query,
    String? accessToken,
    List<String>? tags,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#searchAnimations, [], {
          #query: query,
          #accessToken: accessToken,
          #tags: tags,
        }),
        returnValue: _i2.Future<List<_i7.AnimationMetadataModel>>.value([]),
      ) as _i2.Future<List<_i7.AnimationMetadataModel>>);
}

class MockMinioClientService extends _i1.Mock implements _i4.MinioClientService {
  MockMinioClientService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> downloadObject({
    required String? objectName,
    required String? destinationPath,
    String? bucket,
    _i4.ProgressCallback? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#downloadObject, [], {
          #objectName: objectName,
          #destinationPath: destinationPath,
          #bucket: bucket,
          #onProgress: onProgress,
        }),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String> getPresignedUrl({
    required String? objectName,
    String? bucket,
    Duration? expiry,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getPresignedUrl, [], {
          #objectName: objectName,
          #bucket: bucket,
          #expiry: expiry,
        }),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
}

class MockSecureStorageService extends _i1.Mock implements _i5.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<String?> getAccessToken() =>
      (super.noSuchMethod(
        Invocation.method(#getAccessToken, []),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);
}

class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> get isConnected =>
      (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Stream<bool> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i2.Stream<bool>.empty(),
      ) as _i2.Stream<bool>);
}

class _FakeAnimationMetadataModel_0 extends _i1.SmartFake implements _i7.AnimationMetadataModel {
  _FakeAnimationMetadataModel_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}
